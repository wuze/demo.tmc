{
  "name": "electron-to-chromium",
  "version": "1.2.2",
  "description": "Provides a list of electron-to-chromium version mappings",
  "main": "index.js",
  "scripts": {
    "build": "node build.js",
    "update": "node automated-update.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/kilian/electron-to-chromium/"
  },
  "keywords": [
    "electron",
    "chrome",
    "browserlist"
  ],
  "author": {
    "name": "Kilian Valkhof"
  },
  "license": "ISC",
  "devDependencies": {
    "request": "^2.79.0",
    "shelljs": "^0.7.6"
  },
  "readme": "# Electron-to-Chromium\nThis repository provides a mapping of Electron versions to the Chromium version that it uses.\n\n## Install\nInstall using `npm install electron-to-chromium`.\n\n## Usage\nto include electron-to-chromium, require it:\n\n```js\nvar e2c = require('electron-to-chromium');\n```\n\n### Properties\nThe Electron-to-Chromium object has 4 properties to use:\n\n#### versions\nAn object with all _major_ Electron versions as keys and their respective major Chromium version as string value.\n\n```js\nvar versions = e2c.versions;\nconsole.log(versions['1.4']);\n// returns \"53\"\n```\n\n#### fullVersions\nAn object with all Electron versions as keys and their respective Chromium version as value.\n\n```js\nvar versions = e2c.fullVersions;\nconsole.log(versions['1.4.11']);\n// returns \"53.0.2785.143\"\n```\n\n#### electronToChromium(query)\nArguments:\n* Query: string or number, required. A major or full electron version.\n\nA function that returns the corresponding Chromium version for a given Electron function. Returns a string.\n\nIf you provide it with a major Electron version, it will return a major Chromium version:\n\n```js\nvar chromeVersion = e2c.electronToChromium('1.4');\n// chromeVersion is \"53\"\n```\n\nIf you provide it with a full Electron version, it will return the full Chromium version.\n\n```js\nvar chromeVersion = e2c.electronToChromium('1.4.11');\n// chromeVersion is \"53.0.2785.143\"\n```\n\nIf a query does not match a Chromium version, it will return `undefined`.\n\n```js\nvar chromeVersion = e2c.electronToChromium('9000');\n// chromeVersion is undefined\n```\n\n#### electronToBrowserList(query)\nArguments:\n* Query: string or number, required. A major Electron version.\n\nA function that returns a [Browserlist](https://github.com/ai/browserslist) query that matches the given major Electron version. Returns a string.\n\nIf you provide it with a major Electron version, it will return a Browserlist query string that matches the chromium capabilities:\n\n```js\nvar query = e2c.electronToBrowserList('1.4');\n// query is \"Chrome >= 53\"\n```\n\nIf a query does not match a Chromium version, it will return `undefined`.\n\n```js\nvar query = e2c.electronToBrowserList('9000');\n// query is undefined\n```\n\n### importing just versions or fullVersions\nBoth the versions and the fullVersions list can be imported on their own, if file-size is a concern.\n\n### versions\n\n```js\nvar versions = require('electron-to-chromium/versions');\n```\n\n### fullVersions\n\n```js\nvar fullVersions = require('electron-to-chromium/full-versions');\n```\n\n\n## Updating\nThis package will be updated with each new Electron release.\n\nTo update the list, run `npm run build.js`. Requires internet access as it downloads from the canonical list of Electron versions.\n",
  "readmeFilename": "README.md",
  "_id": "electron-to-chromium@1.2.2",
  "dist": {
    "shasum": "ca7cde94bb9a76c0baefc7789795436399d96a22"
  },
  "_from": "electron-to-chromium@^1.2.2",
  "_resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.2.2.tgz"
}
